{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/playerService.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/grindingcompetition/grindingcompetition.component.html","./src/app/pages/grindingcompetition/grindingcompetition.component.ts","./src/app/app.module.ts","./src/app/pages/grindingcompetition/GrindingCompetition.routes.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  backendApiAddress: 'http://localhost:1789',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Player } from '../models/player';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n  private readonly baseUri: string = environment.backendApiAddress + '/api/GrindCompetitionPlayer';\r\n\r\n  constructor(\r\n    private readonly http: HttpClient) { }\r\n\r\n  public getPlayers(): Observable<Player[]> {\r\n    return this.http.get<Player[]>(this.baseUri);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Grinding Competition';\r\n}\r\n","<router-outlet></router-outlet>\r\n","<section class=\"aanvraagGegevens\">\r\n    <section class=\"gegevens\">\r\n        <table mat-table [dataSource]=\"players\">\r\n            <ng-container matColumnDef=\"Name\">\r\n                <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                <td mat-cell *matCellDef=\"let player\">\r\n                    <!-- <div id=\"tankPreview\">\r\n                        <img src=\"/assets/Tank Body.png\" style=\"position:absolute;width:50%;left:25%;top:25%;height:50%;\">\r\n                        <img src=\"https://blocktanks.io/assets/items/decal/200128.png\" style=\"position:absolute;width:50%;left:25%;top:25%;height:50%;\">\r\n                        <img src=\"https://blocktanks.io/assets/items/arm/200131.png\" style=\"position:absolute;width:87.5%;left:6.25%;top:6.25%;height:87.5%;transform:rotate(30deg);\">\r\n                        <img src=\"https://blocktanks.io/assets/items/sticker/0.png\" style=\"position:absolute;width:50%;left:25%;top:25%;height:50%;\">\r\n\t\t\t\t\t</div> -->\r\n                    {{player.name}}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"XP Grinded\">\r\n                <th mat-header-cell *matHeaderCellDef> XP Grinded </th>\r\n                <td mat-cell *matCellDef=\"let player\"> {{player.currentScore.xp - player.initialScore.xp}} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let player; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </section>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { Player } from 'src/app/models/player';\r\nimport { PlayerService } from 'src/app/services/playerService';\r\n\r\n@Component({\r\n  selector: 'app-grindingcompetition',\r\n  templateUrl: './grindingcompetition.component.html',\r\n  styleUrls: ['./grindingcompetition.component.scss']\r\n})\r\nexport class GrindingCompetitionComponent {\r\n  players: Player[] = [{ name: 'piet', initialScore: {xp: 5, kills:4, deaths:2, timestamp: \"\"}, currentScore: {xp:10, kills:4, deaths:2, timestamp: \"\"}},{ name: 'klaas', initialScore: {xp: 5, kills:4, deaths:2, timestamp: \"\"}, currentScore: {xp:10, kills:4, deaths:2, timestamp: \"\"}}];\r\n  displayedColumns = ['Name', 'XP Grinded'];\r\n\r\n  constructor(playerService: PlayerService) {\r\n    playerService.getPlayers().subscribe(value => this.players = value);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatButtonModule } from '@angular/material/button'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GrindingCompetitionComponent } from './pages/grindingcompetition/grindingcompetition.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GrindingCompetitionComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { GrindingCompetitionComponent } from './grindingcompetition.component';\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const GrindingCompetitionRoutes: Routes = [\r\n    {\r\n        path: 'grindingcompetition',\r\n        component: GrindingCompetitionComponent,\r\n    }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GrindingCompetitionRoutes } from './pages/grindingcompetition/GrindingCompetition.routes';\r\n\r\nconst routes: Routes = [\r\n  ...GrindingCompetitionRoutes,\r\n  {\r\n    path: '**',\r\n    redirectTo: 'grindingcompetition'\r\n  }\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,  {\r\n    // Don't perform initial navigation in iframes\r\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}